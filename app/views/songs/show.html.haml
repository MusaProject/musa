.row
  %h1.left My video Test
  %h3.right
.row
  .large-2.columns
    = link_to 'Play', '#', id: 'play', class:''
    %br
    = link_to 'Pause', '#', id: 'pause', class: ''
    %br
    = link_to 'Stop', '#', id: 'stop', class: ''
  .large-7.columns
    .blur
    #video

.lyric.row
  - @song.parse_lyric.each_with_index do |line,i|
    - unless line.blank?
      - blank = line.scan(/\[(.*?)\]/)
      %p.large-8.columns.large-centered{"data-line"=>"#{i}",
        "data-ans_n"=> "#{blank.count}",
        "data-ans"=>"#{blank.join(',')}",
        class: "#{i == 0 ? 'current': ''} #{blank.empty? ? '' : 'blank'}"}
        #{line}

:coffee
  $ ->
    window.pop = Popcorn.youtube( "#video", "#{@song.url}" )
  VIDEO =

    subtitleID: 0
    continue: 0
    addSubtitle: (start, end, subtitle) ->
      window.pop.cue end, ->
        VIDEO.subtitleID += 1
        current = $('.current')
        VIDEO.checkBlank current


    #function to actually display the subtitle
    displaySubtitle: (current, index) ->
      lineNumber = index
      lineHeight = parseInt($('.lyric p').css('line-height'))
      console.log lineNumber
      $('.lyric').scrollTop(lineNumber * lineHeight)
      next = current.next()
      next.addClass 'current'
      current.removeClass 'current'

    checkBlank: (current) ->
      VIDEO.displaySubtitle current, VIDEO.subtitleID

    enableInputs: (current) ->
      inputs = current.find('input')
      $.each inputs, (i, input) ->
        $(input).removeAttr('disabled')
        if i == 0
          $(input).focus()

    nextLine: (current) ->
      window.pop.play()
      VIDEO.displaySubtitle current, VIDEO.subtitleID
      VIDEO.continue = 0

    updateScore: ()->
      value = parseInt("#{5}")
      total_ans = $('.correct').length
      total_score = total_ans * value
      $('.score').text total_score
      debugger
      opacity_total = 1 / window.blanks
      console.log opacity_total
      opacity = tola_ans * opacity_toal
      console.log opacity
      $('.blur').css('opacity',opacity)

    reviewAnswer: (input) ->
      active_input = $(input)
      line = active_input.parents('.current')
      correct_ans = line.data('ans')
      ans = active_input.val()
      active_input.attr('disabled', 'disabled')
      correct = ''
      if ans == correct_ans
        active_input.addClass('correct')
        correct = 'check'
        VIDEO.updateScore()
      else
        active_input.addClass('fail')
        correct = ''
      $('.answers tbody').append("<tr><td>"+correct_ans+"</td><td class='user-ans "+correct+"'>"+ans+"</td></tr>")


    inputDone: (input) ->
      active_input = $(input[0])
      line = active_input.parents('.current')
      ans_n = $(line).data('ans_n')
      console.log line
      if ans_n > 1
        active_input.next('.blank-input').focus()
      else
        VIDEO.reviewAnswer active_input
        VIDEO.continue = 1
        VIDEO.nextLine line


  document.addEventListener "DOMContentLoaded", (->
    window.blanks = $('.blank-input').length

    lines = JSON.parse("#{escape_javascript @song.subtitles}")
    $.each lines, (i,key) ->
      VIDEO.addSubtitle(key['start'], key['end'], key['line'])
      console.log key['start']

    $('.blank-input').on 'keypress', (e) ->
      code = e.keyCode || e.which
      if code == 13
        VIDEO.inputDone $(e.target)

    $('#play').on 'click', (e) ->
      e.preventDefault()
      window.pop.play()

    $('#stop').on 'click', (e) ->
      e.preventDefault()
      window.location.reload()

    $('#pause').on 'click', (e) ->
      e.preventDefault()
      window.pop.pause()

  ), false

